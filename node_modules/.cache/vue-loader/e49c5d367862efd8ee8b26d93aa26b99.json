{"remainingRequest":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\src\\components\\formInfo.vue?vue&type=style&index=0&id=9378d2bc&scoped=true&lang=css","dependencies":[{"path":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\src\\components\\formInfo.vue","mtime":1658224126670},{"path":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouZm9ybUxpbmU+bGFiZWwgew0KICBmb250LXdlaWdodDogNzAwOw0KfQ0KDQouZWwtZm9ybSB7DQogIHBhZGRpbmc6IDVweCAwcHg7DQp9DQoNCi5Gb3JtSW5mb0FyZWEgL2RlZXAvIC5lbC1mb3JtLWl0ZW1fX2NvbnRlbnQgLmlucHV0LW5ldy10YWcgew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIG1hcmdpbi1sZWZ0OiAxMHB4Ow0KICB3aWR0aDogYXV0byAhaW1wb3J0YW50Ow0KfQ0KDQouc3Bhbkl0ZW0gew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIG1hcmdpbi1yaWdodDogMTBweDsNCn0NCg0KLnNwYW5JdGVtOjphZnRlciB7DQogIGNvbnRlbnQ6ICcsJzsNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KfQ0KDQouc3Bhbkl0ZW06bGFzdC1jaGlsZDo6YWZ0ZXIgew0KICBjb250ZW50OiAnJyAhaW1wb3J0YW50Ow0KfQ0KDQouRm9ybUluZm9BcmVhIC9kZWVwLyAuZWwtZm9ybS1pdGVtX19jb250ZW50IC5idXR0b24tbmV3LXRhZyB7DQogIG1hcmdpbi1sZWZ0OiAxMHB4Ow0KfQ0KDQouRm9ybUluZm9BcmVhIC9kZWVwLyAuZWwtZm9ybS1pdGVtX19jb250ZW50PmxhYmVsLA0KLkZvcm1JbmZvQXJlYSAvZGVlcC8gLmVsLWZvcm0taXRlbV9fY29udGVudD5sYWJlbD5zcGFuPmRpdiB7DQogIHdpZHRoOiAxMDAlOw0KfQ0KDQovZGVlcC8gLmVsLWZvcm0taXRlbV9fY29udGVudCB7DQogIHBhZGRpbmctcmlnaHQ6IDIwcHg7DQogIHBhZGRpbmctdG9wOiAxcHg7DQogIHBhZGRpbmctYm90dG9tOiAzcHg7DQp9DQoNCi9kZWVwLyAuZWwtaW5wdXRfX2lubmVyLA0KLmVsLWlucHV0LW51bWJlciB7DQogIHdpZHRoOiAxMDAlOw0KfQ0KDQouZWwtZm9ybS1pdGVtX19jb250ZW50PnAgew0KICB3aWR0aDogMTAwJTsNCiAgbWFyZ2luOiAwcHg7DQogIHRleHQtYWxpZ246IGxlZnQ7DQp9DQo="},{"version":3,"sources":["E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\src\\components\\formInfo.vue"],"names":[],"mappings":"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","file":"E:/golaxy/zstp/西浦大学/authorityForecast/src/components/formInfo.vue","sourceRoot":"","sourcesContent":["<template>\r\n<div class=\"FormInfoArea\">\r\n  <el-form ref=\"dataInfo\" class=\"formItem\" :label-width=\"dataInfo.labelWidth\" :label-position=\"dataInfo.labelPosition || 'right'\" :label-suffix=\"dataInfo.labelSuffix || ':'\" :model=\"dataInfo\">\r\n    <slot v-for=\"(item, index) in dataInfo.data\">\r\n      <el-form-item v-if=\"!item.hide\" class=\"formLine\" :label=\"item.name\" :required=\"item.must\" :index=\"index\" :style=\"item.style || dataInfo.style\">\r\n        <el-checkbox v-if=\"item.type === 'checkbox' && dataInfo.mode !== 'view'\" ref=\"checkAll\" v-model=\"item.checkAll\" prop=\"checkAll\" label=\"全部\" :indeterminate=\"item.isIndeterminate\" name=\"type\" :size=\"item.size || 'small'\" @change=\"handleCheckAllChange(item, index)\"></el-checkbox>\r\n        <slot v-if=\"!!item.items && !!item.type && dataInfo.mode !== 'view'\">\r\n          <label v-for=\"(d, i) in item.items\" :key=\"i\" style=\"margin-right: 10px\">\r\n            <slot>\r\n              <span v-if=\"d.type === 'checkbox' || item.type === 'checkbox'\">\r\n                <el-checkbox v-model=\"d.checked\" prop=\"checked\" :label=\"d.value\" :name=\"item.name\" :size=\"item.size || 'small'\" @change=\"handleCheckedChange(item, index)\">{{ d.name }}</el-checkbox>\r\n              </span>\r\n              <span v-else-if=\"d.type === 'radio' || item.type === 'radio'\">\r\n                <el-radio v-model=\"item.value\" prop=\"value\" :label=\"d.value === undefined ? d : d.value\" :size=\"item.size || 'small'\" name=\"type\" @change=\"dealChangeEvent(item, index)\">{{ d.name }}</el-radio>\r\n              </span>\r\n              <span v-else-if=\"d.type === 'switch' || item.type === 'switch'\">\r\n                <span v-if=\"d\">{{ d }}</span>\r\n                <el-switch v-model=\"item.value\" prop=\"value\" active-color=\"#13ce66\" inactive-color=\"#ff4949\" :size=\"item.size || 'small'\" @change=\"dealChangeEvent(item, index)\"></el-switch>\r\n              </span>\r\n              <span v-else-if=\"\r\n                    d.type === 'dateRange' || item.type === 'dateRange'\r\n                  \">\r\n                <el-date-picker v-model=\"item.value\" clearable type=\"daterange\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" :default-time=\"['', '']\" :size=\"item.size || 'small'\" prop=\"value\" value-format=\"timestamp\" :picker-options=\"item.pickerOptions\" @change=\"dealChangeEvent(item, index)\"></el-date-picker>\r\n              </span>\r\n              <span v-else-if=\"d.type === 'text' || item.type === 'text'\">\r\n                <el-input :show-password=\"item.showPassword\" v-model=\"item.value\" clearable :size=\"item.size || 'small'\" :placeholder=\"d.placeholder\" prop=\"value\" @change=\"dealChangeEvent(item, index)\"></el-input>\r\n              </span>\r\n              <span v-else-if=\"d.type === 'number' || item.type === 'number'\" clearable>\r\n                <el-input-number v-model=\"item.value\" clearable :size=\"item.size || 'small'\" :placeholder=\"d.placeholder\" :min=\"d.min || item.min\" :max=\"d.max || item.max\" :precision=\"d.precision || item.precision\" prop=\"value\" @change=\"dealChangeEvent(item, index)\"></el-input-number>\r\n              </span>\r\n              <span v-else-if=\"d.type === 'select' || item.type === 'select'\">\r\n                <el-select v-model=\"item.value\" :multiple=\"item.multiple\" :clearable=\"!item.multiple\" :size=\"item.size || 'small'\" :placeholder=\"d.placeholder\" @change=\"\r\n                      dealChangeEvent({ ...item, value: d.value }, index)\r\n                    \">\r\n                  <el-option v-for=\"(tItem, tIndex) in d.options\" :key=\"tIndex\" :label=\"tItem.label || tItem\" :value=\"tItem.value === undefined ? tItem : tItem.value\"></el-option>\r\n                </el-select>\r\n              </span>\r\n              <span v-else-if=\"d.type === 'textarea' || item.type === 'textarea'\">\r\n                <el-input v-model=\"item.value\" clearable type=\"textarea\" :size=\"item.size || 'small'\" :placeholder=\"d.placeholder\" prop=\"value\" @change=\"dealChangeEvent(item, index)\"></el-input>\r\n              </span>\r\n              <span v-else-if=\"\r\n                    d.type === 'datePicker' || item.type === 'datePicker'\r\n                  \">\r\n                <el-date-picker v-model=\"item.value\" :size=\"item.size || 'small'\" :format=\"d.format || item.format || 'yyyy-MM-dd HH:mm:ss'\" :value-format=\"\r\n                      d['value-format'] ||\r\n                        item['value-format'] ||\r\n                        'yyyy-MM-dd HH:mm:ss'\r\n                    \" :type=\"d.pickerType || item.pickerType || 'datetime'\" :placeholder=\"\r\n                      d.placeholder || item.placeholder || '选择日期时间'\r\n                    \" @change=\"dealChangeEvent(item, index)\"></el-date-picker>\r\n              </span>\r\n              <span v-else> </span>\r\n            </slot>\r\n            <slot v-if=\"!!d.input\">\r\n              <span v-for=\"(t, index) in d.input\" :key=\"index\">\r\n                <el-input v-model=\"item[t.mode]\" clearable :size=\"t.size || 'small'\" :placeholder=\"t.placeholder\" :style=\"\r\n                      'display: inline-block; width: ' +\r\n                        (t.width || 100) +\r\n                        'px;'\r\n                    \" @change=\"dealChangeEvent(item, index)\"></el-input>\r\n                <span v-if=\"t.label\" style=\"margin-right: 5px\">{{\r\n                    t.label\r\n                  }}</span>\r\n                <span v-if=\"t.text\" style=\"margin-right: 10px\">{{\r\n                    t.text\r\n                  }}</span>\r\n              </span>\r\n            </slot>\r\n          </label>\r\n        </slot>\r\n        <span v-else-if=\"item.type === 'tags' && dataInfo.mode !== 'view'\">\r\n          <el-tag v-for=\"(tag, tIndex) in item.value\" :key=\"tIndex\" class=\"eTagItem\" closable :type=\"tag.type\" :size=\"item.size || 'small'\" prop=\"value\" style=\"margin-left: 5px\" @close=\"handleClose(tag, tIndex, item)\">{{ tag.name || tag }}</el-tag>\r\n          <el-input v-if=\"item.inputVisible\" ref=\"saveTagInput\" v-model=\"item.inputValue\" clearable class=\"input-new-tag\" size=\"mini\" @keyup.enter=\"handleInputConfirm(item, index)\" @blur=\"handleInputConfirm(item, index)\">\r\n          </el-input>\r\n          <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(item, index)\">+新增标签</el-button>\r\n        </span>\r\n        <slot v-else>\r\n          <p v-if=\"\r\n                item.value &&\r\n                  item.value.constructor &&\r\n                  item.value.constructor.name !== 'Array'\r\n              \">\r\n            {{\r\n                item.type === 'select'\r\n                  ? dataMap(item.value, item.items[0].options)\r\n                  : dataMap(item.value, item.items)\r\n              }}\r\n          </p>\r\n          <span v-for=\"(t, index) in item.value\" v-else :key=\"index\" class=\"spanItem\">\r\n            {{ dataMap(t, item.items) }}\r\n          </span>\r\n        </slot>\r\n        <slot v-if=\"\r\n              item.folding &&\r\n                (item.type === 'checkbox' || item.type === 'radio')\r\n            \">\r\n          <label style=\"\r\n                position: absolute;\r\n                top: 2px;\r\n                right: 0px;\r\n                line-height: 15px;\r\n              \" :title=\"item.buttonText || '收起'\">\r\n            <el-button type=\"text\" size=\"small\">\r\n              <i style=\"\r\n                    display: inline-block;\r\n                    border: solid 1px #eee;\r\n                    padding: 2px;\r\n                    border-radius: 2px;\r\n                  \" :class=\"item.buttonIcon || 'el-icon-arrow-up'\"></i>\r\n            </el-button>\r\n          </label>\r\n        </slot>\r\n        <p v-if=\"item.errorTips\" prop=\"errorTips\" style=\"line-height: 1; color: rgba(220, 0, 0, 0.8)\">\r\n          {{ item.errorTips }}\r\n        </p>\r\n      </el-form-item>\r\n    </slot>\r\n  </el-form>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n// var $ = require(\"jquery\");\r\nexport default {\r\n  props: {\r\n    dataObj: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      dataInfo: {\r\n        labelWidth: '100px',\r\n        labelPosition: \"left\",\r\n        data: [{\r\n          name: '姓名',\r\n          value: 'XXXX',\r\n        }, ],\r\n      },\r\n    };\r\n  },\r\n  beforeMount() {\r\n    // this.dataInfo = this.dataObj;\r\n    if (this.dataObj) {\r\n      this.updateData(this.dataObj);\r\n    }\r\n  },\r\n  methods: {\r\n    handleClose(tag, tIndex, d) {\r\n      console.log(tag);\r\n      d.value.splice(tIndex, 1);\r\n    },\r\n\r\n    showInput(d) {\r\n      d.inputVisible = true;\r\n      this.$nextTick(() => {\r\n        if (this.$refs && this.$refs.saveTagInput) {\r\n          this.$refs.saveTagInput[0].$refs.input.focus();\r\n        }\r\n      });\r\n    },\r\n\r\n    handleInputConfirm(d) {\r\n      let inputValue = d.inputValue;\r\n      if (inputValue) {\r\n        d.value.push(inputValue);\r\n      }\r\n      d.inputVisible = false;\r\n      d.inputValue = '';\r\n    },\r\n    updateData(data) {\r\n      this.dataInfo = data;\r\n      var arr = data.data;\r\n      var result = data.result || {};\r\n      for (var i = 0; i < arr.length; i++) {\r\n        var key = arr[i].key;\r\n        if (key && result[key]) {\r\n          arr[i].value = result[key] || arr[i].value;\r\n        }\r\n        if (arr[i].type === 'checkbox') {\r\n          arr[i].value = [];\r\n          for (var j = 0; j < arr[i].items.length; j++) {\r\n            var item = arr[i].items[j];\r\n            if (typeof item === 'string') {\r\n              arr[i].items[j] = {\r\n                name: item,\r\n                value: item,\r\n              };\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    dealChangeEvent(item, index) {\r\n      this.$emit('change', item, index, this.dataInfo);\r\n      console.log(item, index);\r\n      this.checkValue(item);\r\n    },\r\n    getFormValue() {\r\n      var arr = this.dataInfo.data || [];\r\n      var tData = {};\r\n      for (var i = 0; i < arr.length; i++) {\r\n        var key = arr[i].key || i;\r\n        tData[key] = arr[i].value;\r\n        if (arr[i].items && arr[i].items[0] && arr[i].type !== 'radio') {\r\n          tData[key] = arr[i].items[0].value || arr[i].value;\r\n          if (arr[i].items.length > 1) {\r\n            tData[key] = arr[i].items.map(item => {\r\n              return item.value;\r\n            });\r\n          }\r\n          arr[i].value = tData[key];\r\n        }\r\n      }\r\n      return tData;\r\n    },\r\n    updateFormValue(data) {\r\n      data = data || {};\r\n      var arr = this.dataInfo.data || [];\r\n      for (var i = 0; i < arr.length; i++) {\r\n        var key = arr[i].key || i;\r\n        arr[i].value = data[key];\r\n      }\r\n      this.$forceUpdate();\r\n    },\r\n    emptyFormValue(data) {\r\n      this.updateFormValue({});\r\n    },\r\n    checkValue(item) {\r\n      var tRet = {\r\n        code: 0,\r\n        message: 'OK',\r\n      };\r\n      this.getFormValue();\r\n      if (item.must && (!item.value || item.value.length === 0)) {\r\n        tRet.code = 1;\r\n        tRet.message = '不可为空。';\r\n        item.errorTips = tRet.message;\r\n        this.$forceUpdate();\r\n        return tRet;\r\n      } else {\r\n        item.errorTips = '';\r\n      }\r\n\r\n      var rule = item.checkRule;\r\n      item.errorTips = undefined;\r\n      var tt = null;\r\n      if (rule) {\r\n        if (rule.constructor.name === 'Object' && rule.callback) {\r\n          tt = rule.callback(item.value);\r\n          if (tt !== 0) {\r\n            tRet.code = tt;\r\n            tRet.message = rule.message || '';\r\n          }\r\n        } else if (rule.constructor.name === 'Array') {\r\n          for (var i = 0; i < rule.length; i++) {\r\n            if (\r\n              rule[i] &&\r\n              rule[i].constructor.name === 'Object' &&\r\n              rule[i].callback\r\n            ) {\r\n              tt = rule[i].callback(item.value);\r\n              console.log(tt);\r\n              if (tt !== 0) {\r\n                tRet.code = tt;\r\n                tRet.message = rule[i].message;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (tRet.code !== 0) {\r\n        item.errorTips = tRet.message;\r\n      } else {\r\n        item.errorTips = '';\r\n      }\r\n      this.$forceUpdate();\r\n      return tRet;\r\n    },\r\n    checkAllItems() {\r\n      var ret = 0;\r\n      var arr = this.dataInfo.data;\r\n      for (var i = 0; i < arr.length; i++) {\r\n        var tRet = this.checkValue(arr[i]);\r\n        if (tRet.code !== 0 && ret === 0) {\r\n          ret = tRet.code;\r\n        }\r\n      }\r\n      return ret;\r\n    },\r\n    dataMap(v, options) {\r\n      var ret = v;\r\n      if (options && options.constructor.name === 'Array') {\r\n        for (var i = 0; i < options.length; i++) {\r\n          var item = options[i];\r\n          if (item.value === v) {\r\n            ret = item.name || item.label;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return ret;\r\n    },\r\n    dealPickerEvent(start, end, item) {\r\n      console.log(start);\r\n      item.value = [start, end];\r\n    },\r\n    handleCheckAllChange(item, index) {\r\n      item.value = [];\r\n      for (var i = 0; i < item.items.length; i++) {\r\n        if (item.checkAll) {\r\n          // item.checkAll=false\r\n          item.items[i].checked = true;\r\n          item.value.push(item.items[i].value || item.items[i].name);\r\n        } else {\r\n          item.items[i].checked = false;\r\n        }\r\n      }\r\n      item.isIndeterminate = false;\r\n\r\n      this.$forceUpdate();\r\n      this.$emit('change', item, index, this.dataInfo);\r\n      console.log(item, index);\r\n      this.checkValue(item);\r\n    },\r\n    handleCheckedChange(item, index) {\r\n      item.value = [];\r\n      for (var i = 0; i < item.items.length; i++) {\r\n        if (item.items[i].checked) {\r\n          item.value.push(item.items[i].value || item.items[i].name);\r\n        }\r\n      }\r\n      let checkedCount = item.value.length;\r\n      item.checkAll = checkedCount === item.items.length;\r\n      item.isIndeterminate =\r\n        checkedCount > 0 && checkedCount < item.items.length;\r\n\r\n      this.$forceUpdate();\r\n      this.$emit('change', item, index, this.dataInfo);\r\n      console.log(item, index);\r\n      this.checkValue(item);\r\n    },\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          alert('submit!!');\r\n          console.log(this.dataInfo);\r\n        } else {\r\n          alert('error!!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.formLine>label {\r\n  font-weight: 700;\r\n}\r\n\r\n.el-form {\r\n  padding: 5px 0px;\r\n}\r\n\r\n.FormInfoArea /deep/ .el-form-item__content .input-new-tag {\r\n  display: inline-block;\r\n  margin-left: 10px;\r\n  width: auto !important;\r\n}\r\n\r\n.spanItem {\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n}\r\n\r\n.spanItem::after {\r\n  content: ',';\r\n  display: inline-block;\r\n}\r\n\r\n.spanItem:last-child::after {\r\n  content: '' !important;\r\n}\r\n\r\n.FormInfoArea /deep/ .el-form-item__content .button-new-tag {\r\n  margin-left: 10px;\r\n}\r\n\r\n.FormInfoArea /deep/ .el-form-item__content>label,\r\n.FormInfoArea /deep/ .el-form-item__content>label>span>div {\r\n  width: 100%;\r\n}\r\n\r\n/deep/ .el-form-item__content {\r\n  padding-right: 20px;\r\n  padding-top: 1px;\r\n  padding-bottom: 3px;\r\n}\r\n\r\n/deep/ .el-input__inner,\r\n.el-input-number {\r\n  width: 100%;\r\n}\r\n\r\n.el-form-item__content>p {\r\n  width: 100%;\r\n  margin: 0px;\r\n  text-align: left;\r\n}\r\n</style>\r\n"]}]}