{"remainingRequest":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\src\\components\\dataTable.vue?vue&type=style&index=0&id=7b0ac738&scoped=true&lang=css","dependencies":[{"path":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\src\\components\\dataTable.vue","mtime":1658224126674},{"path":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY29udGFpbmVyQXJlYSB7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDEwMCU7DQp9DQoNCi5lbC10YWJsZS0tZml0LmVsLXRhYmxlIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7DQp9DQoNCi5lbC10YWJsZS0tZml0IHRyIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsNCn0NCg0KL2RlZXAvIC5lbC10YWJsZV9faGVhZGVyIHRoZWFkIHRyIHRoIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmNyAhaW1wb3J0YW50Ow0KICBjb2xvcjogIzAwMCAhaW1wb3J0YW50Ow0KfQ0KDQovZGVlcC8gLmVsLXBhZ2luYXRpb24gew0KICBmbG9hdDogcmlnaHQ7DQogIHBhZGRpbmctbGVmdDogMHB4Ow0KfQ0KDQouZGVsZXRlQ29sb3Igew0KICBjb2xvcjogI2Q2NGEwMA0KfQ0K"},{"version":3,"sources":["E:\\golaxy\\zstp\\西浦大学\\authorityForecast\\src\\components\\dataTable.vue"],"names":[],"mappings":";AAuPA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACpB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf","file":"E:/golaxy/zstp/西浦大学/authorityForecast/src/components/dataTable.vue","sourceRoot":"","sourcesContent":["<template>\r\n<div class=\"containerArea\">\r\n  <!-- 数据表格table的参考含义请参考 script标签中的data.dataInfo参数注释 -->\r\n  <el-table v-if=\"isShow\" ref=\"dataTableItem\" :data=\"dataInfo.data\" :height=\"dataInfo.height\" :max-height=\"dataInfo.maxHeight\" :stripe=\"dataInfo.stripe || false\" :border=\"dataInfo.border || false\" :empty-text=\"dataInfo.emptyText || '暂无数据'\" :fit=\"dataInfo.fit === undefined ? true : dataInfo.fit\" :highlight-current-row=\"dataInfo.heightCurrentRow\" :show-header=\"\r\n        dataInfo.showHeader === undefined ? true : dataInfo.showHeader\r\n      \" :header-row-style=\"{\r\n        background: '#f2f2f2',\r\n      }\" style=\"width: 100%\" @selection-change=\"handleSelectionChange\" @cell-click=\"dealCellClick\" @sort-change=\"dealSortChange\">\r\n    <el-table-column v-if=\"dataInfo.withSelection\" type=\"selection\" width=\"50\" align=\"center\"></el-table-column>\r\n    <el-table-column v-if=\"dataInfo.withIndex\" type=\"index\" align=\"center\"></el-table-column>\r\n    <slot v-for=\"d in dataInfo.header\">\r\n      <el-table-column :sortable=\"d.sortable\" :align=\"d.align\" :prop=\"d.prop\" :label=\"d.label\" :fixed=\"d.fixed\" :header-align=\"d.headerAlign || d.align\" :width=\"d.width\" :index=\"d.index\" :min-width=\"d.minWidth\" :show-overflow-tooltip=\"d.showOverflowTooltip\" :class-name=\"d.className\" :resizable=\"d.resizable\">\r\n        <template #default=\"scope\">\r\n          <slot v-if=\"!!d.buttons\">\r\n            <slot v-for=\"t in d.buttons\">\r\n              <el-button link v-if=\"\r\n                    !t.condition ||\r\n                      (t.condition.constructor.name === 'Array' &&\r\n                        t.condition.indexOf(scope.row[d.prop]) !== -1) ||\r\n                      (t.condition.constructor.name === 'String' &&\r\n                        t.condition === scope.row[d.prop])\r\n                  \" :type=\"t.type || 'primary'\" :class=\"t.class\" :title=\"t.title || t.label\" :size=\"t.size || 'small'\" @click=\"\r\n                    dealClickButton(\r\n                      t.eventName || t.label,\r\n                      scope.row,\r\n                      scope.$index\r\n                    )\r\n                  \">\r\n                {{ t.label }}\r\n              </el-button>\r\n            </slot>\r\n          </slot>\r\n          <slot v-else>\r\n            <slot v-if=\"dataInfo.map && dataInfo.map[d.prop]\">\r\n              <span v-if=\"!d.style\" :prop=\"d.prop\">{{\r\n                  typeof dataInfo.map[d.prop] === 'function'\r\n                    ? dataInfo.map[d.prop](scope.row[d.prop])\r\n                    : dataInfo.map[d.prop][scope.row[d.prop]]\r\n                || '-'}}</span>\r\n              <div v-else :prop=\"d.prop\" :style=\"d.style\">\r\n                <span :prop=\"d.prop\">{{\r\n                    typeof dataInfo.map[d.prop] === 'function'\r\n                      ? dataInfo.map[d.prop](scope.row[d.prop])\r\n                      : dataInfo.map[d.prop][scope.row[d.prop]]\r\n                  || '-'}}</span>\r\n              </div>\r\n            </slot>\r\n            <slot v-else>\r\n              <span v-if=\"!d.style\" :prop=\"d.prop\">{{\r\n                  scope.row[d.prop] || '-'\r\n                }}</span>\r\n              <div v-else :prop=\"d.prop\" :style=\"d.style\">\r\n                <span :prop=\"d.prop\">{{ scope.row[d.prop] || '-'}}</span>\r\n              </div>\r\n            </slot>\r\n          </slot>\r\n          <slot v-if=\"d.extraData\">\r\n            <div v-if=\"d.extraData.key\">\r\n              <slot v-if=\"d.extraData.type === 'tags'\">\r\n                <slot v-for=\"item in scope.row[d.extraData.key] || []\">\r\n                  <el-tag style=\"margin-right: 5px;\" :type=\"!!d.extraData.typeMap ? d.extraData.typeMap[item] : ''\">{{\r\n                    item\r\n                  }}</el-tag>\r\n                </slot>\r\n              </slot>\r\n            </div>\r\n            <div v-else>{{scope.row[d.extraData] || ''}}</div>\r\n          </slot>\r\n        </template>\r\n      </el-table-column>\r\n    </slot>\r\n  </el-table>\r\n\r\n  <!-- 数据表格table的分页参数，参考含义请参考 script标签中的data.dataInfo参数注释 -->\r\n  <slot v-if=\"!!dataInfo.page\">\r\n    <el-pagination :style=\"dataInfo.style || 'margin-top: 5px;'\" :page-size=\"dataInfo.page.pageSize || 20\" :page-sizes=\"dataInfo.page.sizes || [10, 20, 50, 100]\" :current-page=\"dataInfo.page.currentPage\" :layout=\"\r\n          dataInfo.page.layout || 'total, sizes, prev, pager, next, jumper'\r\n        \" :total=\"dataInfo.page.total\" :background=\"dataInfo.page.background\" @size-change=\"dealSizeChange\" @current-change=\"dealPageChange\"></el-pagination>\r\n  </slot>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    dataObj: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      isShow: true,\r\n      //dataInfo标识组件实例的默认数据参数定义\r\n      dataInfo: {\r\n        //showHeader标识数据表格是否显示表头\r\n        showHeader: true,\r\n        //withSelection标识数据表格是否带有复选框列\r\n        withSelection: true,\r\n        //withIndex标识数据表格是否带有自动索引列\r\n        withIndex: true,\r\n        //header标识数据表格的标题有哪些列，每列与data数组元素的哪个属性绑定\r\n        header: [{\r\n            //prop标识该元素所代表的数据列与data数组元素的哪个属性绑定\r\n            prop: 'key1',\r\n            //label标识该元素所代表的数据列头名称标签\r\n            label: '列名1',\r\n            //width标识该元素所代表的数据列宽的像素值\r\n            width: '180',\r\n            //width标识该元素所代表的数据列的单元格文本对齐方式\r\n            align: 'center',\r\n          },\r\n          {\r\n            prop: 'key2',\r\n            label: '列名2',\r\n            width: '180',\r\n            align: 'center',\r\n          },\r\n          {\r\n            prop: 'key3',\r\n            label: '列名3',\r\n          },\r\n          {\r\n            prop: 'key3',\r\n            label: '操作',\r\n            align: 'left',\r\n            buttons: [{\r\n                //text标识相应按钮的文本信息\r\n                label: '编辑',\r\n                //eventName标识点击相应按钮触发的事件名称\r\n                eventName: 'eidtItem',\r\n                //condition标识某数据行的相应按钮显示的条件\r\n                condition: ['CC112'],\r\n                //标识相应按钮的大小\r\n                size: 'small',\r\n                //icon标识相应按钮的图标\r\n                icon: 'el-icon-edit',\r\n              },\r\n              {\r\n                label: '删除',\r\n                eventName: 'removeItem',\r\n                // 删除按钮颜色\r\n                class: 'deleteColor'\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        //data数组为数据表格Body显示的数据内容。\r\n        data: [{\r\n            key1: 'AA111',\r\n            key2: 'BB111',\r\n            key3: 'CC111',\r\n          },\r\n          {\r\n            key1: 'AA112',\r\n            key2: 'BB112',\r\n            key3: 'CC112',\r\n          },\r\n        ],\r\n        //page为数据表格分页配置\r\n        page: {\r\n          //background标识分页条是否有背景，有的话背景是什么\r\n          background: false,\r\n          //sizes标识当前分页条支持每页最多显示记录数可以切换的数值\r\n          sizes: [15, 30, 45, 60],\r\n          //pageSize标识当前分页条每页最多显示条数\r\n          pageSize: 15,\r\n          //layout标识当前分页条包含的操作元素\r\n          layout: 'total, sizes, prev, pager, next, jumper',\r\n          //total标识当前分页条对应数据总量总条数\r\n          total: 10000,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  watch: {},\r\n  //组件mount之前确认是否有传入dataObj参数，有的话就替换组件实例的默认数据。\r\n  beforeMount() {\r\n    if (this.dataObj) {\r\n      this.dataInfo = this.dataObj;\r\n    }\r\n  },\r\n  mounted() {\r\n    //获取数据表格实例\r\n    this.tableItem = this.$refs.dataTableItem;\r\n  },\r\n  created() {},\r\n  methods: {\r\n    //更新表格数据，同时也让数据表格界面更新\r\n    updateData(newObj) {\r\n      this.isShow = false;\r\n      this.$nextTick(function () {\r\n        this._updateData(newObj);\r\n        this.isShow = true;\r\n      });\r\n    },\r\n    //只更新表格数据\r\n    _updateData(newObj) {\r\n      for (var k in newObj) {\r\n        this.$set(this.dataInfo, k, newObj[k]);\r\n      }\r\n    },\r\n    //清除数据表格的选中状态\r\n    clearSelection() {\r\n      this.tableItem.clearSelection();\r\n    },\r\n    setCurrentRow(row) {\r\n      this.tableItem.setCurrentRow(row);\r\n    },\r\n    toggleRowSelection(row, selected) {\r\n      this.tableItem.toggleRowSelection(row, selected);\r\n    },\r\n    //清除数据表格排序状态\r\n    clearSort() {\r\n      this.tableItem.clearSort();\r\n    },\r\n    //响应选中变化事件，释放selection-change事件\r\n    handleSelectionChange(val) {\r\n      // const selectList = this.tableItem.selection; // 获取复选框选中列表\r\n      this.dataInfo.selected = val;\r\n      this.$emit('selection-change', val);\r\n    },\r\n    //响应分页size变化事件，释放size-change事件\r\n    dealSizeChange(val) {\r\n      this.dataInfo.page.pageSize = val;\r\n      this.dataInfo.page.currentPage = 1;\r\n      this.$emit('page-change', this.dataInfo.page.currentPage || 1, val);\r\n    },\r\n    //响应翻页事件，释放page-change事件\r\n    dealPageChange(val) {\r\n      this.dataInfo.page.currentPage = val;\r\n      this.$emit('page-change', val, this.dataInfo.page.pageSize);\r\n    },\r\n    //响应单元格点击事件，释放cell-click事件\r\n    dealCellClick(row, column, cell, event) {\r\n      this.$emit('cell-click', row, column, cell, event);\r\n    },\r\n    //响应按钮点击事件，释放button-click事件\r\n    dealClickButton(eventName, row, index) {\r\n      this.$emit('button-click', eventName, row, index);\r\n    },\r\n    //响应排序变化事件，释放sort-change事件\r\n    dealSortChange(param) {\r\n      this.$emit('sort-change', param);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.containerArea {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.el-table--fit.el-table {\r\n  background-color: transparent;\r\n}\r\n\r\n.el-table--fit tr {\r\n  background-color: transparent !important;\r\n}\r\n\r\n/deep/ .el-table__header thead tr th {\r\n  background-color: #f7f7f7 !important;\r\n  color: #000 !important;\r\n}\r\n\r\n/deep/ .el-pagination {\r\n  float: right;\r\n  padding-left: 0px;\r\n}\r\n\r\n.deleteColor {\r\n  color: #d64a00\r\n}\r\n</style>\r\n"]}]}